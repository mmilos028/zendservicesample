;top section for socket connection on game server to send messages
[socket]
socket.active = "true"
socket.ip_address = "192.168.3.7"
socket.port = "30010"
;ISO 8859-1 ASCII table
socket.symbol_ascii = "181"
socket.timeout = "30"

[websocket : socket]
websocket.active = "true"
websocket.ip_address = "192.168.3.7"
websocket.port = "30012"
;ISO 8859-1 ASCII table
websocket.symbol_ascii = "181"
websocket.timeout = "30"
websocket.path = "/"

;testing mail section
[mail : websocket]
;sending exception errors through mail
sendErrorsOnMail = "true"
smtpServer = "mail.activestudio.rs"
mailSubjectTitle = "Error Mail From Web Service - MALTA TESTING DATABASE"
mailFromTitle = "Web Service Error Log - MALTA TESTING DATABASE"
mailToTitle = "Web Service Errors - MALTA TESTING DATABASE"
mailSendErrorTo = "mmilos028@gmail.com"
mailSendErrorFrom = "sender@example.com"
mailGroupRecipients1 = "mmilos028@gmail.com"

[playerMailsToSupportMail : mail]
;if true sends all mails for players also to this support accounts
sendMailsForPlayerToSupport = "true"
playerToSupportMailSmtpServer = "mail.example.com"
playerToSupportMailStmpServerPort = "25"
;mail for support which accepts player sent mails
playerToSupportMailSendErrorTo = "mmilos028@gmail.com"
playerToSupportMailSendErrorFrom = "sender@example.com"

[webSiteSettings : playerMailsToSupportMail]
;web site ip address location
checkSiteIpAddress = "false"
siteIpAddress = "192.168.3.64 192.168.3.63"
;if web site web service is to be in wsdl mode then true
webSiteWSDLMode = "true"
;if web site merchant service is to be in wsdl mode then true
siteMerchantWSDLMode = "true"

[webSiteLogs : webSiteSettings]
;site access log
writeSiteAccessLogFile = "true"
siteAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\SiteWebServiceAccess.txt"
siteAccessLogSize = "50"
;site error log
writeSiteErrorLogFile = "true"
siteErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\SiteWebServiceError.txt"
siteErrorLogSize = "50"

[apcoPayment : webSiteLogs]
apcoDoVoidPurchaseOperation = "true"
apcoDoVoidCreditOperation = "true"
;testcard payment method ( "true" | "false" )
apcoTestCard = "true"
;one credit card allowed per player ("true" | "false")
apcoOneCreditCardPerPlayer = "false"
;apco hosted payment form default language - possible en | it | fr | de | hr | se | ro | gr | rs or sb | no | ru | pl | cz | sk | bg | tr | es | mt
apcoCreditCardLanguage = "en"
;apco soap web service url address to verify transactions
apcoCreditCardSoapService = "https://www.apsp.biz:9085/merchantTools.asmx?WSDL"
;apco payment service checkout page
;apcoCheckoutPage = "https://www.apsp.biz/Pay/FP4f/Checkout.aspx"
apcoCheckoutPage = "https://www.apsp.biz/pay/FP5A/checkout.aspx"
;apco purchase action type
apcoCreditCardPurchaseCommand = "1"
;apco void purchase action type
apcoCreditCardVoidPurchaseCommand = "3"
;apco authorization action type
apcoCreditCardAuthorizationCommand = "4"
;apco original credit action type
apcoCreditCardOriginalCreditCommand = "13"
;apco void credit action type
apcoCreditCardVoidCreditCommand = "6"
;number of attempts to confirm apco transaction to database
apcoConfirmToDatabaseAttempts = "1"
;10 is 1 sec = 10 * 100000 microsec
apcoConfirmToDatabaseTimeDelay = "10"
;check apco ip adress servers
checkApcoIpAddress = "false"
;filter by ip address receiving transactions from apco servers
apcoIpAddress = "78.133.121.102 217.168.166.66"
;number of credit cards to show in list, enter by number (1, 2, 3) or ALL for all credit cards or LAST for last used credit card
apcoCreditCardListAllCards = "3"
apcoProfileID = "277ED1448C4845F9B5B131BBD6A4ECC8"
apcoHashingSecretWord = "d91b590591"
apcoMerchantCode = "8909"
apcoMerchantPassword = "3uukahekeu5ehono7ala"

apcoHttpUser = "active"
apcoHttpPassword = "studio"

;apco integration access log
writeApcoIntegrationAccessLogFile = "true"
apcoIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\ApcoIntegrationWebServiceAccess.txt"
apcoIntegrationAccessLogSize = "50"
;apco merchant error log
writeApcoIntegrationErrorLogFile = "true"
apcoIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\ApcoIntegrationWebServiceError.txt"
apcoIntegrationErrorLogSize = "50"
;apco merchant declined transactions logs
writeApcoIntegrationDeclinedTransactionsLogFile = "true"
apcoIntegrationDeclinedTransactionsPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\ApcoIntegrationWebServiceDeclinedTransactions.txt"
apcoIntegrationDeclinedTransactionsLogSize = "50"

apcoIntegrationTestSimulationMode = "true"

[wirecardPayment: apcoPayment]
wirecardDoVoidPurchaseOperation = "true"
wirecardDoVoidCreditOperation = "true"

wirecardTestMode = "true"
wirecardMerchantAccountIdWdbEE = "1b3be510-a992-48aa-8af9-6ba4c368a0ac"
wirecardSecretKeyWdbEE = "33a67608-9822-43c2-acc1-faf2947b1be5"

wirecardMerchantAccountIdWdb3DEE = "1b3be510-a992-48aa-8af9-6ba4c368a0ac"
wirecardSecretKeyWdb3DEE = "33a67608-9822-43c2-acc1-faf2947b1be5"

wirecardMerchantAccountIdSofort = "f19d17a2-01ae-11e2-9085-005056a96a54"
wirecardSecretKeySofort = "ad39d9d9-2712-4abd-9016-cdeb60dc3c8f"

wirecardPurchaseNotificationUrl = "http://www.example.com/onlinecasinoservice/wirecard-merchant/purchase"

wirecardOriginalCreditNotificationUrl = "http://www.example.com/onlinecasinoservice/wirecard-merchant/payout"

;wirecardPaymentRestUrl = "https://api.wirecard.com/engine/rest/payments/"
wirecardPaymentRestUrl = "http://www.example.com/onlinecasinoservice/wirecard/payout.php"
wirecardPaymentRestUsername = "70000-APIDEMO-CARD"
wirecardPaymentRestPassword = "ohysS0-dvfMx"

checkWirecardIpAddress = "false"
wirecardIpAddress = "78.133.121.102 217.168.166.66"
wirecardConfirmToDatabaseAttempts = "1"
wirecardConfirmToDatabaseTimeDelay = "10"

wirecardHttpUser = "active"
wirecardHttpPassword = "studio"

;wirecard access log
writeWirecardIntegrationAccessLogFile = "true"
wirecardIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\WirecardDirectWebServiceAccess.txt"
wirecardIntegrationAccessLogSize = "50"
;wirecard error log
writeWirecardIntegrationErrorLogFile = "true"
wirecardIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\WirecardWebServiceError.txt"
wirecardIntegrationErrorLogSize = "50"
;wirecard direct declined transactions logs
writeWirecardIntegrationDeclinedTransactionsLogFile = "true"
wirecardIntegrationDeclinedTransactionsPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\WirecardWebServiceDeclinedTransactions.txt"
wirecardIntegrationDeclinedTransactionsLogSize = "50"

[paysafecardDirectPayment: wirecardPayment]
paysafecardDirectMerchantWSDLMode = "true"
paysafecardDirectTestMode = "true"

checkPaysafecardDirectIpAddress = "false"
paysafecardDirectIpAddress = ""

paysafecardDirectUrl = "https://apitest.paysafecard.com/v1/"

paysafecardDirectNotificationUrl = "http://www.example.com/onlinecasinoservice/paysafecard-direct-merchant/purchase"

paysafecardDirectHttpUser = "psc_TKhZXhvB48iy2dlHFvn6nXN1iSRT8wK"
paysafecardDirectHttpPassword = ""

paysafecardDirectHttpUserPayout = "psc_TKhZXhvB48iy2dlHFvn6nXN1iSRT8wK",
paysafecardDirectHttpPasswordPayout = ""

paysafecardVerifyCertificate = "true"
paysafecardCertificateFileName = "DigiCertHighAssuranceEVRootCA.pem"

localPaysafecardDirectHttpUser = "active"
localPaysafecardDirectHttpPassword = "studio"

paysafecardDirectConfirmToDatabaseAttempts = "1"
paysafecardDirectConfirmToDatabaseTimeDelay = "10"

;paysafecard access log
writePaysafecardDirectIntegrationAccessLogFile = "true"
paysafecardDirectIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\PaysafecardDirectWebServiceAccess.txt"
paysafecardDirectIntegrationAccessLogSize = "50"
;paysafecard error log
writePaysafecardDirectIntegrationErrorLogFile = "true"
paysafecardDirectIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\PaysafecardDirectWebServiceError.txt"
paysafecardDirectIntegrationErrorLogSize = "50"
;paysafecard direct declined transactions logs
writePaysafecardDirectIntegrationDeclinedTransactionsLogFile = "true"
paysafecardDirectIntegrationDeclinedTransactionsPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\PaysafecardDirectWebServiceDeclinedTransactions.txt"
paysafecardDirectIntegrationDeclinedTransactionsLogSize = "50"

;this is configuration for Lateral payment solution
[lpsPayment: paysafecardDirectPayment]
lpsMerchantUserId = "MERCHANT_USER_ID"
lpsMerchantPassword = "MERCHANT_PASSWORD"
lpsMerchantRefundId = "MERCHANT_REFUND_ID"
lpsSecretKey = "LPS_SECRECT_KEY"
;Our server ip address, our requests sent to LPS servers
lpsMerchantIpAddress = "192.168.3.63"
;LPS server ip address, requests that are sent by their servers
lpsServerIpAddress = "192.168.3.63"
lpsRefundUrl = "https://www.example.com/test/lps-concentrator/payout.php"
;refund type - 1 is for Standard Refund
; 5 - is CFT
lpsRefundType = "1"
checkLpsIpAddress = "false"

[merchantLogs : lpsPayment]
;merchant access log
writeMerchantAccessLogFile = "true"
merchantAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\MerchantWebServiceAccess.txt"
merchantAccessLogSize = "50"
;merchant error log
writeMerchantErrorLogFile = "true"
merchantErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\MerchantWebServiceError.txt"
merchantErrorLogSize = "50"
;merchant declined transactions logs
writeMerchantDeclinedTransactionsLogFile = "true"
merchantDeclinedTransactionsPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\MerchantWebServiceDeclinedTransactions.txt"
merchantDeclinedTransactionsLogSize = "50"

[ldcIntegration : merchantLogs]
;username to access LDC casino web service
;ldcUser = "ORANGEJOKER"
;ldcPassword = "79fe68f913d211e41b9f6774a2a6a371"
ldcUser = "MULTIWIN24"
ldcPassword = "363194bdcdb66b8cc71d6361b81155b2"
;url address from ldc web service
ldcMasterClientWebServiceURL = "http://test.golivedealer.com/masterclientwebservice/masterclientwebservice.asmx?wsdl"
;url from ldc casino lobby
ldcLobbyURL = "http://test.golivedealer.com/livedealer/liveDealerLobby.aspx"
;ldcMasterClientWebServiceURL = "http://pprod.golivedealer.com/masterclientwebservice/masterclientwebservice.asmx?wsdl"
;ldcLobbyURL = "http://pprod.golivedealer.com/livedealer/liveDealerLobby.aspx"
; true or false to test for whitelist ip address to our web service
ldcTestWhiteListIP = "true"
; put web service for GGL (LDC) in WSDL mode if true
ldcWSDLMode = "true"
;ldc integration access log
writeLdcIntegrationAccessLogFile = "true"
ldcIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\LdcIntegrationWebServiceAccess.txt"
ldcIntegrationAccessLogSize = "50"
;ldc integration error log
writeLdcIntegrationErrorLogFile = "true"
ldcIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\LdcIntegrationWebServiceError.txt"
ldcIntegrationErrorLogSize = "50"

[cbcxIntegration : ldcIntegration]
; true or false to test for whitelist ip address to cbcx integration web service
cbcxTestWhiteListIP = "false"
; put web service for CBCX in WSDL mode if true
cbcxWSDLMode = "true"
;cbcx integration access log
writeCbcxIntegrationAccessLogFile = "true"
cbcxIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\CbcxIntegrationWebServiceAccess.txt"
cbcxIntegrationAccessLogSize = "50"
;cbcx integration error log
writeCbcxIntegrationErrorLogFile = "true"
cbcxIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\CbcxIntegrationWebServiceError.txt"
cbcxIntegrationErrorLogSize = "50"

[sportBettingIntegration : cbcxIntegration]
; true or false to test for whitelist ip address to sport betting integration web service
sportBettingTestWhiteListIP = "false"
; put web service for Betting in WSDL mode if true
sportBettingWSDLMode = "true"
;betting integration access log
writeSportBettingIntegrationAccessLogFile = "true"
sportBettingIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\SportBettingIntegrationWebServiceAccess.txt"
sportBettingIntegrationAccessLogSize = "50"
;betting integration error log
writeSportBettingIntegrationErrorLogFile = "true"
sportBettingIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\SportBettingIntegrationWebServiceError.txt"
sportBettingIntegrationErrorLogSize = "50"

[externalIntegration : sportBettingIntegration]
; true or false to test for whitelist ip address to cbcx integration web service
externalIntegrationTestWhiteListIP = "false"
;cbcx integration access log
writeExternalIntegrationAccessLogFile = "true"
externalIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\ExternalIntegrationWebServiceAccess.txt"
externalIntegrationAccessLogSize = "50"
;cbcx integration error log
writeExternalIntegrationErrorLogFile = "true"
externalIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\ExternalIntegrationWebServiceError.txt"
externalIntegrationErrorLogSize = "50"

externalIntegrationMQServer = ""

[vivoGamingIntegration : externalIntegration]
; true or false to test for whitelist ip address to vivo gaming integration web service
vivoGamingIntegrationTestWhiteListIP = "true"
vivoGamingPassKey = "7f1c5d"
vivoGamingBetSoftOperatorId = "31217"
vivoGamingLiveGameUnifiedOperatorId = "31217"
vivoGamingSpinomenalOperatorId = "31217"
vivoGamingSpinomenalPartnerId="9"
vivoGamingTomHornOperatorId = "31217"
vivoGamingTomHornPartnerId="9"
;vivo gaming integration access log
writeVivoGamingIntegrationAccessLogFile = "true"
vivoGamingIntegrationAccessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\VivoGamingIntegrationWebServiceAccess.txt"
vivoGamingIntegrationAccessLogSize = "50"
;vivo gaming integration error log
writeVivoGamingIntegrationErrorLogFile = "true"
vivoGamingIntegrationErrorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\VivoGamingIntegrationWebServiceError.txt"
vivoGamingIntegrationErrorLogSize = "50"

[db : vivoGamingIntegration]
;db.dbname = "(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.3.1)(PORT = 1521))(CONNECT_DATA = (SERVICE_NAME = casino)))"
db.dbname = "(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.3.1)(PORT = 1521))(CONNECT_DATA = (SID = casino)))"
;db.ip_address = "192.168.3.1"
db.ip_address = "192.168.3.1"
db.adapter = "oracle"
db.username = "player"
db.password = "player"
db.persistent = true
db.charset = "WE8MSWIN1252"
db.enable_cache = "false"
db.cache_location = "C:\\database_cache_example\"

[db_ats : db]
db_ats.username = "ATS"
db_ats.password = "ATSPASS"
db_ats.persistent = "true"

[serviceLogs : db_ats]
;used to log access to web service
writeAccessLogFile = "true"
accessPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\OnlineCasinoWebServiceAccess.txt"
accessLogSize = "50"
;used to log errors from web service
writeErrorLogFile = "true"
errorPathFile = "C:\backoffice_logs\logs\onlinecasinoservice\OnlineCasinoWebServiceErrors.txt"
;error log size in megabytes after which new log will be created
errorLogSize = "50"

[testing : serviceLogs]
origin_site = "GENUINE"
;if onlinecasinoservice game client should be in wsdl mode then true
onlinecasinoserviceWSDLMode = "true"
;if surfing client service should be in wsdl mode then true
surfingWSDLMode = "false"
;if android client service should be in wsdl mode then true
androidWSDLMode = "false"
;if ATS client service should be in wsdl mode then true
atsWSDLMode = "true"
casino_user_id = "123456789"
casino_lga_user_id = "1234567890"
measureSpeedPerformance = "true"
phpSettings.display_startup_errors = "1"
phpSettings.display_errors = "1"
phpSettings.error_reporting = "1"
phpSettings.memory_limit = 512M
;throwException on 1 not showing zend exception errors
resources.frontController.throwExceptions = "1"
;timezone settings
phpSettings.timezone = "Europe/Berlin"
phpSettings.date_time_format = "m-d-Y H:i:s"
phpSettings.date_format = "m-d-Y"
phpSettings.soap.wsdl_cache_enabled = "0"
phpSettings.soap.wsdl_cache = "0"
phpSettings.html_errors = "1"
phpSettings.default_socket_timeout = "120"
